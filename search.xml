<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sublime text 3 使用说明</title>
      <link href="/2019/09/11/linux-sublime-text-3-shi-yong-shuo-ming/"/>
      <url>/2019/09/11/linux-sublime-text-3-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><p>打开配置文件： Perferences-&gt;setting-&gt;user, 并加入</p><pre><code>&quot;hot_exit&quot;: false,     # 不记住上次打开的文件&quot;save_on_focus_lost&quot;: true,    # 失去焦点自动保存</code></pre><p>改过之后的配置文件如下: </p><pre><code>{    &quot;color_scheme&quot;: &quot;Packages/Color Scheme - Default/Mariana.sublime-color-scheme&quot;,    &quot;hot_exit&quot;: false,    &quot;ignored_packages&quot;:    [        &quot;Vintage&quot;    ],    &quot;save_on_focus_lost&quot;: true,    &quot;theme&quot;: &quot;Default.sublime-theme&quot;}</code></pre><h1 id="安装插件管理器"><a href="#安装插件管理器" class="headerlink" title="安装插件管理器"></a>安装插件管理器</h1><ul><li><p>打开console，粘贴以下代码到命令行并回车：</p><p>  <code>import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( &#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())</code></p></li><li><p>重启程序；</p></li><li><p>如果在Perferences-&gt;中看到package control这一项，则安装成功。</p></li></ul><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul><li>按下Ctrl+Shift+P调出命令面板，输入install，选中 Install Package 选项并回车</li><li>输入想要安装的插件，选中安装</li><li>移除插件输入remove</li><li>更新插件输入upgrade。</li></ul><h1 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h1><ul><li>ConvertToUTF8 （解决中文乱码）</li><li>CTags （函数跳转）</li><li>Fortran （Fortran语法高亮）</li><li>WordCount （统计字数）</li><li>Markdown Preview （预览Markdown）</li><li>MarkdownEditing （Markdown语法高亮）</li></ul><h1 id="配置MarkdownEditing插件"><a href="#配置MarkdownEditing插件" class="headerlink" title="配置MarkdownEditing插件"></a>配置MarkdownEditing插件</h1><ul><li><p>ctrl+shift+p打开命令输入Preference: MarkdownEditing Setting， 出现下面两个选项，分别打开</p><blockquote><p>Preference: MarkdownEditing Setting: Default<br>Preference: MarkdownEditing Setting: User</p></blockquote></li><li><p>将Preference: MarkdownEditing Setting: Default对应文件全部内容复制到Preference: MarkdownEditing Setting: User中</p></li><li><p>在Preference: MarkdownEditing Setting: User中修改任何想要修改的配置，主要如下：</p><pre><code>&quot;color_scheme&quot;: &quot;Packages/Color Scheme - Default/Mariana.sublime-color-scheme&quot;,  // 修改主题风格为系统自带  // &quot;color_scheme&quot;: &quot;Packages/MarkdownEditing/MarkdownEditor.tmTheme&quot;,  // &quot;color_scheme&quot;: &quot;Packages/MarkdownEditing/MarkdownEditor-Dark.tmTheme&quot;,  // &quot;color_scheme&quot;: &quot;Packages/MarkdownEditing/MarkdownEditor-Yellow.tmTheme&quot;,&quot;highlight_line&quot;: true, // 高亮正在编辑的行&quot;line_numbers&quot;: true,   // 显示行号&quot;tab_size&quot;: 4,          // tab宽度&quot;translate_tabs_to_spaces&quot;: true,   // tab转换为空格&quot;trim_trailing_white_space_on_save&quot;: true,  // 保存时去掉行尾空格&quot;word_wrap&quot;: true,      // 自动换行&quot;wrap_width&quot;: &quot;auto&quot;,    // 换行的宽度,默认80会造成左侧大量留白&quot;mde.keep_centered&quot;: true,  // 可以保持你正在编辑的行始终处于屏幕的中间</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim使用说明</title>
      <link href="/2019/09/11/linux-vim-shi-yong-shuo-ming/"/>
      <url>/2019/09/11/linux-vim-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="建立文件"><a href="#建立文件" class="headerlink" title="建立文件"></a>建立文件</h1><pre><code>vim ~/.vimrc   &quot;vim配置文件vim ~/.vimrc.bundles    &quot;插件配置文件mkdir ~/.vim    &quot;插件安装目录</code></pre><h1 id="插件管理工具vundle安装、配置与使用"><a href="#插件管理工具vundle安装、配置与使用" class="headerlink" title="插件管理工具vundle安装、配置与使用"></a>插件管理工具vundle安装、配置与使用</h1><p><code>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle     &quot;安装vundle</code></p><p>使用vundle：运行vim，键入以下命令   </p><pre><code>:PluginInstall     &quot;安装插件 （需先在配置文件中添加插件）:BundleClean     &quot;卸载插件 （需先在配置文件中删除插件）:BundleUpdate     &quot;更新插件:BundleList     &quot;查看已安装插件:BundleSearch     &quot;搜索插件</code></pre><h1 id="插件配置文件-vimrc-bundles-设置"><a href="#插件配置文件-vimrc-bundles-设置" class="headerlink" title="插件配置文件(.vimrc.bundles)设置"></a>插件配置文件(.vimrc.bundles)设置</h1><pre><code>if &amp;compatible  set nocompatibleendfiletype offset rtp+=~/.vim/bundle/vundle/call vundle#rc()&quot; Let Vundle manage VundleBundle &#39;gmarik/vundle&#39;&quot; Define bundles via Github reposBundle &quot;tomasr/molokai&quot;Bundle &quot;JamshedVesuna/vim-markdown-preview&quot;（继续添加你想要的插件）if filereadable(expand(&quot;~/.vimrc.bundles.local&quot;))  source ~/.vimrc.bundles.localendiffiletype on</code></pre><h1 id="Vim配置文件-vimrc-设置"><a href="#Vim配置文件-vimrc-设置" class="headerlink" title="Vim配置文件(.vimrc)设置"></a>Vim配置文件(.vimrc)设置</h1><pre><code>set nocompatible  &quot; 去掉有关vi一致性模式，避免以前版本的一些bug和局限，必须放开头&quot; 启用插件配置if filereadable(expand(&quot;~/.vimrc.bundles&quot;))  source ~/.vimrc.bundlesendif&quot; 高亮当前行列au WinLeave * set nocursorline nocursorcolumnau WinEnter * set cursorline cursorcolumnset cursorline cursorcolumn&quot; 高亮显示第73列set textwidth=72set colorcolumn=+1set number  &quot; 显示行号set numberwidth=5  &quot; 行号显示宽度set nobackup  &quot;禁止生成临时文件set noswapfile  &quot;禁止生成临时文件set nowritebackupset backspace=2   &quot; 像其他编辑器一样退格set showcmd &quot; 输入的命令显示出来，看的清楚些set ignorecase  &quot;  搜索忽略大小写set nohls  &quot; 默认情况下，寻找匹配是高亮度显示的，该设置关闭高亮显示set incsearch  &quot; 设置查询，如此查询时非常方便，如要查找book单词，当输入到/b时，会自动找到第一个b开头的单词set showmatch  &quot; 设置匹配模式，如当输入一个左括号时会匹配相应的右括号set autowrite &quot; 自动保存set autoread  &quot; 设置当文件被改动时自动载入set confirm  &quot; 在处理未保存或只读文件的时候，弹出确认set clipboard+=unnamed  &quot; 共享剪贴板set laststatus=2  &quot; 总是显示状态栏set ruler  &quot; 在编辑过程中，在右下角显示光标位置的状态行set vb t_vb=  &quot; 当vim进行编辑时，如果命令错误，会发出一个响声，该设置去掉响声set mouse=a  &quot; 设置鼠标光标可用filetype plugin indent on  &quot; 检测文件类型，启动插件，启动缩进set history=1000  &quot; 记录历史的行数syntax on  &quot; 语法高亮显示set tabstop=4  &quot; 设置tab建为4个空格set shiftwidth=4  &quot; 设置行之间交错时使用4个空格set softtabstop=4  &quot; 统一缩进为4set autoindent  &quot; 自动对齐，即将当前行的对齐格式应用到下一行set smartindent  &quot; 根据上面的对齐格式，智能的选择对齐格式set fileencodings=utf-8,gb18030,gbk,big5,gb2312,cp936   &quot; 中文支持&quot; set guifont=Courier_New:h10:cANSI    &quot; 设置字体&quot; set background=dark  &quot; 设置背景颜色&quot; set guioptions-=T  &quot; 去除vim的GUI版本中的toolbar&quot; set guioptions-=T &quot; 隐藏工具栏&quot; set guioptions-=m &quot; 隐藏菜单栏&quot; 配色主题colorscheme molokaihighlight NonText guibg=#060606highlight Folded guibg=#0A0A0A guifg=#9090D0</code></pre><h1 id="Vim插件推荐"><a href="#Vim插件推荐" class="headerlink" title="Vim插件推荐"></a>Vim插件推荐</h1><ul><li><p>安装Molokai主题   </p><p>  <code>在.vimrc.bundles中加入Bundle &quot;tomasr/molokai&quot;并安装</code></p></li><li><p>安装Markdown预览   </p><blockquote><p><code>sudo pip install grip   安装grip</code>   </p><p>在.vimrc.bundles中加入Bundle “JamshedVesuna/vim-markdown-preview”并安装   </p><p>在.vimrc中加入 let vim_markdown_preview_github=1   </p><p>vim中按Ctrl+p即可弹出浏览器预览文档</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用说明</title>
      <link href="/2019/09/08/linux-hexo-shi-yong-shuo-ming/"/>
      <url>/2019/09/08/linux-hexo-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo使用说明"><a href="#Hexo使用说明" class="headerlink" title="Hexo使用说明"></a>Hexo使用说明</h1><ul><li>首先附上hexo官方网址，里面有详细教程及主题。<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></li></ul><h2 id="创建Github-Pages-仓库"><a href="#创建Github-Pages-仓库" class="headerlink" title="创建Github Pages 仓库"></a>创建Github Pages 仓库</h2><blockquote><p>GitHub 主页右上角加号 -&gt; New repository：<br>Repository name 中输入 用户名.github.io （用户名必须与github用户名一致）</p></blockquote><h2 id="安装hexo（参考官方文档）"><a href="#安装hexo（参考官方文档）" class="headerlink" title="安装hexo（参考官方文档）"></a>安装hexo（参考官方文档）</h2><pre><code>wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash   #安装nvm   npm   install   -g   hexo-cli      #安装博客程序</code></pre><h2 id="初始化并安装所需组件："><a href="#初始化并安装所需组件：" class="headerlink" title="初始化并安装所需组件："></a>初始化并安装所需组件：</h2><pre><code>mkdir   ~/Hexo-Blog      #设置博客所在目录（后面的操作都在这个目录下完成）hexo init      # 初始化npm install    # 安装组件</code></pre><h2 id="启动本地服务器进行预览："><a href="#启动本地服务器进行预览：" class="headerlink" title="启动本地服务器进行预览："></a>启动本地服务器进行预览：</h2><pre><code>hexo g   # 生成页面hexo s   # 启动预览</code></pre><p>访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！<br>Tips：如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 hexo server -p 5000 更改端口号后重试。</p><h2 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h2><p><code>npm install hexo-deployer-git --save   #安装 hexo-deployer-git</code></p><p>修改 _config.yml 文件末尾的 Deployment 部分，修改成如下： </p><pre><code>deploy:  type: git  repository: git@github.com:用户名/用户名.github.io.git  branch: master</code></pre><p><code>hexo d   # 将网站上传部署到 GitHub Pages</code></p><h1 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h1><p>博客域名 <a href="https://用户名.github.io" target="_blank" rel="noopener">https://用户名.github.io</a></p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><ul><li>进入博客根目录 <code>hexo new &quot;My New Post&quot;  #新建博客文章</code>  </li><li>使用 Markdown 编辑器编辑 source 文件夹下的 My New Post.md 文件<pre><code>hexo g   # 生成页面hexo d   # 部署发布</code></pre></li></ul><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><pre><code>hexo new &quot;name&quot;       # 新建文章hexo new page &quot;name&quot;  # 新建页面hexo g                # 生成页面hexo d                # 部署hexo g -d             # 生成页面并部署hexo s                # 本地预览hexo clean            # 清除缓存和已生成的静态文件hexo help             # 帮助</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABAQUS基本命令</title>
      <link href="/2019/09/07/abaqus-ji-ben-ming-ling/"/>
      <url>/2019/09/07/abaqus-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="命令行运行Abaqus"><a href="#命令行运行Abaqus" class="headerlink" title="命令行运行Abaqus"></a>命令行运行Abaqus</h1><ul><li><code>abq6132 j=Job-1 user=vumat.for int</code>   </li><li>Needs Intel parallel studio &amp; Visual Studio 2010</li></ul>]]></content>
      
      
      <categories>
          
          <category> ABAQUS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABAQUS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABAQUS计算Cavitation</title>
      <link href="/2019/09/07/abaqus-ji-suan-cavitation/"/>
      <url>/2019/09/07/abaqus-ji-suan-cavitation/</url>
      
        <content type="html"><![CDATA[<ul><li><p>In abaqus CAE, create node set for the whole acoustic model in the ‘tools’ manu, then create another node set under ‘assembly-sets’ for the acoustic model with the same set name</p></li><li><p>In the .inp file, type in the command below before the boundary condition.   </p><blockquote><p>‘Flset1’ is the nodel set name<br>0.0 is the cavitation pressure<br>the next three numbers are the coordinates of the reference node which are x, y, z respectively<br>```</p></blockquote></li><li><p>Initial Conditions, TYPE=Acoustic Static Pressure<br>FlSet1, 0.0, 125,12.5,-6E+03</p><pre><code></code></pre></li><li><p>In the .inp file, type in the command below before the acoustic media density    </p><blockquote><p>0.0 means cavitation pressure<br>```</p></blockquote></li><li><p>Acoustic Medium, Cavitation Limit</p></li></ul><p>0.0,</p><pre><code>* Example</code></pre><p><em>Material, name=FS<br>*Density<br> 1.3913e-09,<br>*Elastic, type=ENGINEERING CONSTANTS<br>17000.,17000., 7480.,  0.13,  0.28,  0.28, 4000., 1730.<br> 1730.,<br>*Material, name=LIQUID<br>*Acoustic Medium<br>2280.,<br>*Acoustic Medium, Cavitation Limit<br>0.0,<br>*Density<br> 1.024e-09,<br>*</em><br>** PHYSICAL CONSTANTS<br>**<br><em>Acoustic Wave Formulation, type=TOTAL WAVE<br>*</em><br><em>Initial Conditions, TYPE=Acoustic Static Pressure<br>FlSet1, 0.0, 125,12.5,-6E+03<br>*</em> BOUNDARY CONDITIONS<br>**<br>** Name: FIXED Type: Symmetry/Antisymmetry/Encastre<br><em>Boundary<br>_PickedSet18, ENCASTRE<br>*</em> Name: X_SYMMETRY Type: Symmetry/Antisymmetry/Encastre<br>*Boundary<br>_PickedSet20, XSYMM</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> ABAQUS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABAQUS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用说明</title>
      <link href="/2019/09/07/linux-git-shi-yong-shuo-ming/"/>
      <url>/2019/09/07/linux-git-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="链接github"><a href="#链接github" class="headerlink" title="链接github"></a>链接github</h1><pre><code>git config --global user.name &quot;GitHub 用户名&quot;     ！设置用户名git config --global user.email &quot;GitHub 邮箱&quot;      ！设置邮箱ssh-keygen -t rsa -C &quot;youremail@example.com&quot;     ！生成SSH key&gt; 添加SSH public key到github网站ssh -T git@github.com      !检查是否链接成功</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装gcc，gfortran</title>
      <link href="/2019/09/07/fortran-windows-an-zhuang-gcc-gfortran/"/>
      <url>/2019/09/07/fortran-windows-an-zhuang-gcc-gfortran/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Download mingw-64: <a href="http://mingw-w64.org/doku.php/download" target="_blank" rel="noopener">http://mingw-w64.org/doku.php/download</a>    </p></li><li><p>Install: posix, seh    </p></li><li><p>Set environment variables:    </p><blockquote><p>open: my cumputer – properties – advanced system setting – advanced – environment variables – system variables </p><p>add: C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;   </p></blockquote></li><li><p>Check edition: gfortran -v; gcc -v</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Fortran </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fortran </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2019/09/07/linux-chang-yong-ming-ling/"/>
      <url>/2019/09/07/linux-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="压缩-解压"><a href="#压缩-解压" class="headerlink" title="压缩/解压"></a>压缩/解压</h1><ul><li>Look up<pre><code>tar   -ztvf   /.../*.tar.gz   tar   -jtvf   /.../*.tar.bz2</code></pre></li><li>Compress<pre><code>tar   -jcvf   /.../*.tar.bz2   /home/downloadstar   -zcvf   /.../*.tar.gz   /home/downloads</code></pre></li><li>Decompress<pre><code>tar   -jxvf   /.../*.tar.bz2   (/home/downloads)tar   -zxvf   /.../*.tar.gz   (/home/downloads)</code></pre></li></ul><h1 id="备份-还原"><a href="#备份-还原" class="headerlink" title="备份/还原"></a>备份/还原</h1><ul><li>Backup<pre><code>dd   if=/.../*    of=/.../*.bakdd   if=/dev/sda3    of=/.../sda3.bak</code></pre></li><li>Restore<pre><code>umount /dev/sda3dd   if=/.../sda3.bak    of=/dev/sda3</code></pre></li></ul><h1 id="挂载-卸载"><a href="#挂载-卸载" class="headerlink" title="挂载/卸载"></a>挂载/卸载</h1><ul><li>Mount<pre><code>mount   -o   codepage=936,iocharset=cp936   -t   ntfs   /dev/sda3   /home/temountmount   -o   loop   -t   iso9660   /.../*.iso   /home/temount</code></pre></li><li>Unmount<br><code>umount   /home/temount/</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB使用技巧</title>
      <link href="/2019/09/07/matlab-shi-yong-ji-qiao/"/>
      <url>/2019/09/07/matlab-shi-yong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h1 id="同时运行多个程序代码文件"><a href="#同时运行多个程序代码文件" class="headerlink" title="同时运行多个程序代码文件"></a>同时运行多个程序代码文件</h1><blockquote><ul><li><p>Put all the program files in the same folder    </p></li><li><p>In the command window, write the program name in the order that you want them to run (each name in a separate line).    </p></li><li><p>Click run and enjoy! </p></li></ul></blockquote><h1 id="计算程序运行时间"><a href="#计算程序运行时间" class="headerlink" title="计算程序运行时间"></a>计算程序运行时间</h1><pre><code>tic(part of the program you want to measure)toc</code></pre>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB并行计算设置</title>
      <link href="/2019/09/07/matlab-bing-xing-ji-suan-she-zhi/"/>
      <url>/2019/09/07/matlab-bing-xing-ji-suan-she-zhi/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Go to ‘home-environment-parallel-parallel preferences’ to set the default cluster    </p></li><li><p>Go to ‘home-environment-parallel-manage cluster profiles’, choose the default cluster and click ‘edit’ to change the number of workers    </p><blockquote><p>this is the maximum workers that you can use    </p></blockquote></li><li><p>In your program file, at the begining (before virable statement), write the command below to assign the number of workers (num1) that you want to use (less than the number in cluster file).    </p><p>  <code>parpool (num1)</code>    </p></li><li><p>Use the command below to assign which part of the programe you want to do parallel computing. In this command, you divide your program into ‘num2’ parts and each part will be assigned one worker to compute. If num2 is bigger than num1, for example 5 times, it’s ok because the computer will do the computing 5 times.</p><pre><code>  parfor i=1:num2  (part of the programe that you want to do parallel computing)  End</code></pre></li><li><p>If in ‘home-environment-parallel-parallel preferences’, ‘automatically create parallel pool’ is ticked, matlab will automatically using parallel computing without step 3) but step 3) will overwrite this option.    </p></li><li><p>Every time you change the numbers of workers in step 3), remember to restart to parallel pool (at the left buttom of the window).</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常设置</title>
      <link href="/2019/09/07/other-ri-chang-she-zhi/"/>
      <url>/2019/09/07/other-ri-chang-she-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="护眼颜色设置"><a href="#护眼颜色设置" class="headerlink" title="护眼颜色设置"></a>护眼颜色设置</h1><ul><li><p>Page</p><blockquote><p>RGB: 40-44-52<br>颜色码: 282C34</p></blockquote></li><li><p>Word</p><blockquote><p>RGB: 171-178-191<br>颜色码: ABB2BF</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows常用命令</title>
      <link href="/2019/09/07/windows-chang-yong-ming-ling/"/>
      <url>/2019/09/07/windows-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="合并文件"><a href="#合并文件" class="headerlink" title="合并文件"></a>合并文件</h1><ul><li><p>shift+rightclick, choose ‘open command window here’    </p></li><li><p>Copying the command below    </p><p>  <code>for %f in (*.txt) do type &quot;%f&quot; &gt;&gt; output.txt</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3科学计算环境搭建</title>
      <link href="/2019/09/07/python-python3-ke-xue-ji-suan-huan-jing-da-jian/"/>
      <url>/2019/09/07/python-python3-ke-xue-ji-suan-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3科学计算环境搭建"><a href="#Python3科学计算环境搭建" class="headerlink" title="Python3科学计算环境搭建"></a>Python3科学计算环境搭建</h1><pre><code>sudo apt-get install python3-pip    #安装pip   sudo pip3 install --upgrade pip    #更新pip</code></pre><pre><code>sudo pip3 install numpy    #数据处理   sudo pip3 install scipy    #科学计算   sudo pip3 install pandas    #数据分析   sudo pip3 install matplotlib    #画图   sudo pip3 install seaborn    #美化matplotlib图表   sudo pip3 install ipython    #python shell   sudo pip3 install jupyter    #python note</code></pre><pre><code>sudo apt-get install Spyder    #科学计算IDE`</code></pre><h1 id="pip使用说明"><a href="#pip使用说明" class="headerlink" title="pip使用说明"></a>pip使用说明</h1><pre><code>pip3 help    #显示帮助`   pip3 search &lt;包名&gt;    #查找需要安装的包`</code></pre><pre><code>sudo pip3 install &lt;包名&gt;    #安装包   sudo pip3 install &lt;包名&gt;==1.0.4   sudo pip3 install &lt;包名&gt; -i http://pypi.mirrors.ustc.edu.cn/simple/ </code></pre><pre><code>pip3 list    #列出已经安装的包   pip3 list  -o   #列出过期的包</code></pre><pre><code>sudo pip3 install &lt;包名&gt; -U    #升级包`pip3 show &lt;包名&gt;    #显示包信息`pip3 check &lt;包名&gt;    #检查包依赖`sudo pip3 uninstall &lt;包名&gt;    #卸载包`</code></pre><h2 id="在配置文件中指定pip安装源（没有配置文件可以手动添加一个）"><a href="#在配置文件中指定pip安装源（没有配置文件可以手动添加一个）" class="headerlink" title="在配置文件中指定pip安装源（没有配置文件可以手动添加一个）"></a>在配置文件中指定pip安装源（没有配置文件可以手动添加一个）</h2><p>/etc/pip.conf </p><pre><code>[global] timeout = 6000 index-url = http://pypi.douban.com/simple</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
